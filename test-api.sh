#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Tax Priority API
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8080

BASE_URL="http://localhost:8080"
API_URL="$BASE_URL/api"

echo "üöÄ Testing Tax Priority API"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
echo "1. Health Check:"
curl -s "$BASE_URL/health"
echo ""

# –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ–∫–∞–∂–µ—Ç –æ—à–∏–±–∫—É –±–µ–∑ –ë–î, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç –º–∞—Ä—à—Ä—É—Ç—ã)
echo "2. Users endpoint (without database):"
curl -s "$API_URL/users"
echo ""

echo "3. Users count endpoint:"
curl -s "$API_URL/users/count"
echo ""

echo "4. Users with sorting (createdAt -> created_at):"
curl -s "$API_URL/users?_sort=createdAt&_order=desc"
echo ""

# –¢–µ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤
echo "5. Products endpoint (without database):"
curl -s "$API_URL/products"
echo ""

echo "6. Products count endpoint:"
curl -s "$API_URL/products/count"
echo ""

echo "7. Products with sorting (createdAt -> created_at):"
curl -s "$API_URL/products?_sort=createdAt&_order=desc"
echo ""

echo "================================"
echo "‚úÖ API is responding to requests"
echo "‚ùå Database connection errors are expected without PostgreSQL"
echo ""
echo "To run with database:"
echo "  make docker-run"
echo ""
echo "To test with real data, first start PostgreSQL and create the database:"
echo "  createdb tax_priority"
echo "  make run-local" 